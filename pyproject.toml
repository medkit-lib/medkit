[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "medkit-lib"
version = "0.12.0"
description = "A Python library for a learning health system"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
authors = [
  { name = "HeKA Research Team" },
]
maintainers = [
  { name = "medkit maintainers", email = "medkit-maintainers@inria.fr" },
]
keywords = [
  "bert",
  "digital health",
  "ehr",
  "nlp",
  "umls",
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Scientific/Engineering :: Medical Science Apps.",
  "Topic :: Software Development",
]
dependencies = [
  "anyascii",
  "duptextfinder>=0.3.0",
  "flashtext>=2.7",
  "iamsystem>=0.6.0",
  "intervaltree",
  "numpy",
  "pyaml",
  "requests",
  "smart-open",
  "soundfile",
  "tqdm",
  "typing-extensions",
  "wheel",
]

[project.optional-dependencies]
edsnlp = [
  "edsnlp>=0.9",
]
hf-entity-matcher = [
  "torch>=2.1.1",
  "transformers>=4.21",
]
hf-transcriber = [
  "torchaudio>=2.1.1",
  "transformers>=4.21",
]
hf-translator = [
  "sacremoses",
  "sentencepiece",
  "torch>=2.1.1",
  "transformers>=4.21",
]
hf-utils = [
  "transformers>=4.21",
]
metrics-diarization = [
  "pyannote-core>=5.0",
  "pyannote-metrics>=3.2.0",
]
metrics-text-classification = [
  "scikit-learn>=1.3.2",
]
metrics-ner = [
  "seqeval>=1.2.2",
  "torch>=2.1.1",
  "transformers>=4.21",
]
metrics-transcription = [
  "speechbrain>=0.5",
]
nlstruct = [
  "huggingface-hub",
  "nlstruct>=0.2",
  "torch>=2.1.1",
]
pa-speaker-detector = [
  "pyannote-audio>=3.1",
  "torch>=2.1.1",
]
quick-umls = [
  "packaging",
  "quickumls>=1.4",
  "unqlite>=0.9.6",
]
resampler = [
  "resampy>=0.4",
]
rush-sentence-tokenizer = [
  "PyRush>=1.0",
]
sb-transcriber = [
  "speechbrain>=0.5",
  "torch>=2.1.1",
  "transformers>=4.21",
]
spacy = [
  "spacy>=3.4",
]
srt-io-converter = [
  "pysrt>=1.1.2",
]
syntactic-relation-extractor = [
  "spacy>=3.4",
]
training = [
  "torch>=2.1.1",
]
umls-coder-normalizer = [
  "feather-format>=0.4",
  "pandas>=1.4",
  "torch>=2.1.1",
  "transformers>=4.21",
]
webrtc-voice-detector = [
  "webrtcvad>=2.0",
]
all = [
  """medkit-lib[\
    edsnlp,\
    hf-entity-matcher,\
    hf-transcriber,\
    hf-translator,\
    hf-utils,\
    metrics-diarization,\
    metrics-text-classification,\
    metrics-ner,metrics-transcription,\
    nlstruct,\
    pa-speaker-detector,\
    quick-umls,\
    resampler,\
    rush-sentence-tokenizer,\
    sb-transcriber,\
    spacy,\
    srt-io-converter,\
    syntactic-relation-extractor,\
    training,\
    umls-coder-normalizer,\
    webrtc-voice-detector]""",
]
docs = [
  "jupyter-book==0.15.*",
  "matplotlib",
  "pandas>=1.4",
  "spacy>=3.4",
  "sphinx-autobuild",
  "sphinx-toolbox",
  "sphinxcontrib-mermaid",
]

[project.urls]
Documentation = "https://medkit.readthedocs.io"
Issues = "https://github.com/medkit-lib/medkit/issues"
Source = "https://github.com/medkit-lib/medkit"

[tool.hatch.build.targets.wheel]
packages = ["medkit"]

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]",
  "pytest",
  "pytest-mock",
]

[[tool.hatch.envs.default.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.default.scripts]
test = "pytest tests/unit"
cov-test = "coverage run -m pytest tests/unit"
cov-report = [
  "coverage combine",
  "coverage report",
]
cov = [
  "cov-test",
  "cov-report",
]

[tool.hatch.envs.docs]
features = [
  "docs",
  "metrics-ner",
  "nlstruct",
  "srt-io-converter",
  "webrtc-voice-detector",
]
python = "3.10"

[tool.hatch.envs.docs.scripts]
config = "jupyter-book config sphinx docs/"
build = [
  "config",
  "sphinx-build docs/ {args:docs/_build/html}",
]
serve = [
  "config",
  "sphinx-autobuild docs/ {args:docs/_build/html}",
]

[tool.coverage.run]
source_pkgs = ["medkit", "tests"]
branch = true
parallel = true

[tool.coverage.paths]
medkit = ["medkit", "*/medkit/medkit"]
tests = ["tests", "*/medkit/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py38"
src = ["medkit", "tests"]

[tool.ruff.lint]
select = ["B", "C", "E", "F", "I001", "W"]
ignore = ["E203", "C408", "C901", "E402"]

[tool.ruff.lint.isort]
known-first-party = ["medkit"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.licensecheck]
using = "PEP631"
ignore_packages = [
  "pysimstring",  # BSD-3-Clause
]

[tool.commitizen]
name = "cz_pydata"
version_provider = "poetry"
update_changelog_on_bump = true
bump_message = "REL: Release version $new_version"
changelog_start_rev = "0.12.0"
